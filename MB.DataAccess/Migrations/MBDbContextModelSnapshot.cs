// <auto-generated />
using System;
using MB.DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MB.DataAccess.Migrations
{
    [DbContext(typeof(MBDbContext))]
    partial class MBDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MB.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eaac6de8-dfbb-485e-a94f-c126a38e0c0d"),
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6513),
                            Name = "TV",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("febe926b-36cd-4c3c-8e96-046d0b6da71d"),
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6526),
                            Name = "Phone",
                            Status = true
                        });
                });

            modelBuilder.Entity("MB.Entity.Entities.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8f0130a-b4ac-46af-8ab8-825082ead915"),
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6647),
                            Description = "User",
                            Name = "User",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("f06310dd-0a27-4897-832d-2ebc7feb606e"),
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6649),
                            Description = "Admin",
                            Name = "Admin",
                            Status = true
                        });
                });

            modelBuilder.Entity("MB.Entity.Entities.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87cb48f4-4089-4ca8-817a-024dd432c319"),
                            AppRoleId = new Guid("e8f0130a-b4ac-46af-8ab8-825082ead915"),
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6665),
                            Email = "ruslan.galandarli@gmail.com",
                            Name = "Ruslan",
                            PasswordHash = "+vm1hl0OyKZBtorJGZVZVc1awVcXBCFd+yJPRXwkYjQ=",
                            Status = true,
                            Surname = "Galandarli"
                        });
                });

            modelBuilder.Entity("MB.Entity.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eba2135b-202b-4eeb-9af1-3364d55c5949"),
                            AppUserId = new Guid("87cb48f4-4089-4ca8-817a-024dd432c319"),
                            CategoryId = new Guid("febe926b-36cd-4c3c-8e96-046d0b6da71d"),
                            Count = 23,
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6681),
                            Name = "Iphone",
                            Status = true
                        },
                        new
                        {
                            Id = new Guid("a13a1fda-419f-4ece-a25c-0e084a52d080"),
                            AppUserId = new Guid("87cb48f4-4089-4ca8-817a-024dd432c319"),
                            CategoryId = new Guid("eaac6de8-dfbb-485e-a94f-c126a38e0c0d"),
                            Count = 23,
                            CreateDate = new DateTime(2022, 9, 4, 9, 45, 3, 431, DateTimeKind.Local).AddTicks(6685),
                            Name = "Sm222",
                            Status = true
                        });
                });

            modelBuilder.Entity("MB.Entity.Entities.Identity.AppUser", b =>
                {
                    b.HasOne("MB.Entity.Entities.Identity.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("MB.Entity.Entities.Product", b =>
                {
                    b.HasOne("MB.Entity.Entities.Identity.AppUser", "AppUser")
                        .WithMany("Products")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Entity.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MB.Entity.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MB.Entity.Entities.Identity.AppRole", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("MB.Entity.Entities.Identity.AppUser", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
